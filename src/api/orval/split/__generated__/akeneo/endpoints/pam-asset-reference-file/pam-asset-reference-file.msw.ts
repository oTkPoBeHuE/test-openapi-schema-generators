/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  GetReferenceFilesLocaleCode200,
  PostReferenceFilesLocaleCode201
} from '../../model'

export const getGetReferenceFilesLocaleCodeResponseMock = (): GetReferenceFilesLocaleCode200 => ({"_link":{"download":{"href":"https://demo.akeneo.com/api/rest/v1/assets/tshirt_artemis_main_picture/reference-files/no_locale/download"}},"code":"7/5/8/e/759e39d48va7b42a55002434fd3d7b6cf3189b7f_tshirt_artemis_main_picture.jpg","locale":null})

export const getPostReferenceFilesLocaleCodeResponseMock = (overrideResponse: Partial< PostReferenceFilesLocaleCode201 > = {}): PostReferenceFilesLocaleCode201 => ({errors: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({channel: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), locale: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), message: faker.helpers.arrayElement([faker.string.alpha(20), undefined])})), undefined]), message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), ...overrideResponse})


export const getGetReferenceFilesLocaleCodeMockHandler = (overrideResponse?: GetReferenceFilesLocaleCode200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GetReferenceFilesLocaleCode200> | GetReferenceFilesLocaleCode200)) => {
  return http.get('*/api/rest/v1/assets/:assetCode/reference-files/:localeCode', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetReferenceFilesLocaleCodeResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPostReferenceFilesLocaleCodeMockHandler = (overrideResponse?: PostReferenceFilesLocaleCode201 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<PostReferenceFilesLocaleCode201> | PostReferenceFilesLocaleCode201)) => {
  return http.post('*/api/rest/v1/assets/:assetCode/reference-files/:localeCode', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getPostReferenceFilesLocaleCodeResponseMock()),
      { status: 201,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getGetReferenceFilesChannelCodeLocaleCodeDownloadMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<void> | void)) => {
  return http.get('*/api/rest/v1/assets/:assetCode/reference-files/:localeCode/download', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 200,
        
      })
  })
}
export const getPamAssetReferenceFileMock = () => [
  getGetReferenceFilesLocaleCodeMockHandler(),
  getPostReferenceFilesLocaleCodeMockHandler(),
  getGetReferenceFilesChannelCodeLocaleCodeDownloadMockHandler()
]
