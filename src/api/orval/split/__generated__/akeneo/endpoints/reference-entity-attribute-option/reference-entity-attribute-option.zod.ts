/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get a list of attribute options for a given reference entity.
 * @summary Get a list of attribute options of a given attribute for a given reference entity
 */
export const getReferenceEntityAttributesAttributeCodeOptionsParams = zod.object({
  "reference_entity_code": zod.string(),
  "attribute_code": zod.string()
})

export const getReferenceEntityAttributesAttributeCodeOptionsResponseItem = zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional()
})
export const getReferenceEntityAttributesAttributeCodeOptionsResponse = zod.array(getReferenceEntityAttributesAttributeCodeOptionsResponseItem)

/**
 * This endpoint allows you to get the information about a given attribute option.
 * @summary Get an attribute option for a given attribute of a given reference entity
 */
export const getReferenceEntityAttributesAttributeCodeOptionsCodeParams = zod.object({
  "reference_entity_code": zod.string(),
  "attribute_code": zod.string(),
  "code": zod.string()
})

export const getReferenceEntityAttributesAttributeCodeOptionsCodeResponse = zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional()
})

/**
 * This endpoint allows you to update a given option for a given attribute and a given reference entity. Learn more about <a href="/documentation/update.html#patch-reference-entity-record-values">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given reference entity, it creates it.
 * @summary Update/create a reference entity attribute option
 */
export const patchReferenceEntityAttributesAttributeCodeOptionsCodeParams = zod.object({
  "reference_entity_code": zod.string(),
  "attribute_code": zod.string(),
  "code": zod.string()
})

export const patchReferenceEntityAttributesAttributeCodeOptionsCodeBody = zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional()
})

