/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get a list of records of a given reference entity. Records are paginated and can be filtered.
 * @summary Get the list of the records of a reference entity
 */
export const getReferenceEntityRecordsParams = zod.object({
  "reference_entity_code": zod.string()
})

export const getReferenceEntityRecordsQueryParams = zod.object({
  "search": zod.string().optional(),
  "channel": zod.string().optional(),
  "locales": zod.string().optional(),
  "search_after": zod.string().optional()
})

export const getReferenceEntityRecordsResponse = zod.object({
  "_links": zod.object({
  "first": zod.object({
  "href": zod.string().optional()
}).optional(),
  "next": zod.object({
  "href": zod.string().optional()
}).optional(),
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional()
}).and(zod.object({
  "_embedded": zod.object({
  "items": zod.array(zod.object({
  "_links": zod.object({
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional()
}).and(zod.object({
  "code": zod.string(),
  "created": zod.string().optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "channel": zod.string().optional(),
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional()
})).optional()
}).optional()
}))).optional()
}).optional()
}))

/**
 * This endpoint allows you to update and/or create several records of one given reference entity at once. Learn more about <a href="/documentation/update.html#patch-reference-entity-record-values">Update behavior</a>. Note that if the record does not already exist for the given reference entity, it creates it.
 * @summary Update/create several reference entity records
 */
export const patchReferenceEntityRecordsParams = zod.object({
  "reference_entity_code": zod.string()
})

export const patchReferenceEntityRecordsBodyItem = zod.object({
  "code": zod.string(),
  "created": zod.string().optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "channel": zod.string().optional(),
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional()
})).optional()
}).optional()
})
export const patchReferenceEntityRecordsBody = zod.array(patchReferenceEntityRecordsBodyItem)

export const patchReferenceEntityRecordsResponseItem = zod.object({
  "code": zod.string().optional(),
  "message": zod.string().optional(),
  "status_code": zod.number().optional()
})
export const patchReferenceEntityRecordsResponse = zod.array(patchReferenceEntityRecordsResponseItem)

/**
 * This endpoint allows you to get the information about a given record for a given reference entity.
 * @summary Get a record of a given reference entity
 */
export const getReferenceEntityRecordsCodeParams = zod.object({
  "reference_entity_code": zod.string(),
  "code": zod.string()
})

export const getReferenceEntityRecordsCodeResponse = zod.object({
  "code": zod.string(),
  "created": zod.string().optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "channel": zod.string().optional(),
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional()
})).optional()
}).optional()
})

/**
 * This endpoint allows you to update a given record of a given renference entity. Learn more about <a href="/documentation/update.html#patch-reference-entity-record-values">Update behavior</a>. Note that if the record does not already exist for the given reference entity, it creates it.
 * @summary Update/create a record of a given reference entity
 */
export const patchReferenceEntityRecordsCodeParams = zod.object({
  "reference_entity_code": zod.string(),
  "code": zod.string()
})

export const patchReferenceEntityRecordsCodeBody = zod.object({
  "code": zod.string(),
  "created": zod.string().optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "channel": zod.string().optional(),
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional()
})).optional()
}).optional()
})

