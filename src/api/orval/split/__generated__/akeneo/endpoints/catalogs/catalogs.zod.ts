/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get the list of catalogs you owned.
 * @summary Get the list of owned catalogs
 */
export const getAppCatalogsQueryLimitMax = 100;


export const getAppCatalogsQueryParams = zod.object({
  "page": zod.number().optional(),
  "limit": zod.number().min(1).max(getAppCatalogsQueryLimitMax).optional()
})

export const getAppCatalogsResponse = zod.object({
  "_links": zod.object({
  "first": zod.object({
  "href": zod.string().optional()
}).optional(),
  "next": zod.object({
  "href": zod.string().optional()
}).optional(),
  "previous": zod.object({
  "href": zod.string().optional()
}).optional(),
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional(),
  "current_page": zod.number().optional()
}).and(zod.object({
  "_embedded": zod.object({
  "items": zod.array(zod.object({
  "_links": zod.object({
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional()
}).and(zod.object({
  "enabled": zod.boolean().optional(),
  "id": zod.string().optional(),
  "name": zod.string().optional()
}))).optional()
}).optional()
}))

/**
 * This endpoint allows you to create a new catalog.
 * @summary Create a new catalog
 */
export const postAppCatalogBody = zod.object({
  "name": zod.string()
})

/**
 * This endpoint allows you to delete a catalog.
 * @summary Delete a catalog
 */
export const deleteAppCatalogParams = zod.object({
  "id": zod.string().uuid()
})

/**
 * This endpoint allows you to get the information about a catalog.
 * @summary Get a catalog
 */
export const getAppCatalogParams = zod.object({
  "id": zod.string().uuid()
})

export const getAppCatalogResponse = zod.object({
  "enabled": zod.boolean().optional(),
  "id": zod.string().optional(),
  "name": zod.string().optional()
})

/**
 * This endpoint allows you to update a catalog.
 * @summary Update a catalog
 */
export const patchAppCatalogParams = zod.object({
  "id": zod.string().uuid()
})

export const patchAppCatalogBody = zod.object({
  "name": zod.string()
})

export const patchAppCatalogResponse = zod.object({
  "enabled": zod.boolean().optional(),
  "id": zod.string().optional(),
  "name": zod.string().optional()
})

