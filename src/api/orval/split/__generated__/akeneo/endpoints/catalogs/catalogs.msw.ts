/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  GetAppCatalog200,
  GetAppCatalogs200,
  PatchAppCatalog200,
  PostAppCatalog201
} from '../../model'

export const getGetAppCatalogsResponseMock = (): GetAppCatalogs200 => ({_links: faker.helpers.arrayElement([{first: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined]), next: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined]), previous: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined]), self: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined])}, undefined]), current_page: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]),..._embedded: faker.helpers.arrayElement([{items: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({_links: faker.helpers.arrayElement([{self: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined])}, undefined]),enabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), id: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), name: faker.helpers.arrayElement([faker.string.alpha(20), undefined])})), undefined])}, undefined])})

export const getPostAppCatalogResponseMock = (): PostAppCatalog201 => ({"enabled":false,"id":"12351d98-200e-4bbc-aa19-7fdda1bd14f2","name":"My app catalog"})

export const getGetAppCatalogResponseMock = (): GetAppCatalog200 => ({"enabled":false,"id":"12351d98-200e-4bbc-aa19-7fdda1bd14f2","name":"My app catalog"})

export const getPatchAppCatalogResponseMock = (): PatchAppCatalog200 => ({"enabled":false,"id":"12351d98-200e-4bbc-aa19-7fdda1bd14f2","name":"My app catalog"})


export const getGetAppCatalogsMockHandler = (overrideResponse?: GetAppCatalogs200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GetAppCatalogs200> | GetAppCatalogs200)) => {
  return http.get('*/api/rest/v1/catalogs', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetAppCatalogsResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPostAppCatalogMockHandler = (overrideResponse?: PostAppCatalog201 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<PostAppCatalog201> | PostAppCatalog201)) => {
  return http.post('*/api/rest/v1/catalogs', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getPostAppCatalogResponseMock()),
      { status: 201,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getDeleteAppCatalogMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)) => {
  return http.delete('*/api/rest/v1/catalogs/:id', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 204,
        
      })
  })
}

export const getGetAppCatalogMockHandler = (overrideResponse?: GetAppCatalog200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GetAppCatalog200> | GetAppCatalog200)) => {
  return http.get('*/api/rest/v1/catalogs/:id', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetAppCatalogResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPatchAppCatalogMockHandler = (overrideResponse?: PatchAppCatalog200 | ((info: Parameters<Parameters<typeof http.patch>[1]>[0]) => Promise<PatchAppCatalog200> | PatchAppCatalog200)) => {
  return http.patch('*/api/rest/v1/catalogs/:id', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getPatchAppCatalogResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getCatalogsMock = () => [
  getGetAppCatalogsMockHandler(),
  getPostAppCatalogMockHandler(),
  getDeleteAppCatalogMockHandler(),
  getGetAppCatalogMockHandler(),
  getPatchAppCatalogMockHandler()
]
