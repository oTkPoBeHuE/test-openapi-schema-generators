/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get a list of published products. Published products are paginated and they can be filtered.
 * @summary Get list of published products
 */
export const getPublishedProductsQueryLimitMax = 100;


export const getPublishedProductsQueryParams = zod.object({
  "search": zod.string().optional(),
  "scope": zod.string().optional(),
  "locales": zod.string().optional(),
  "attributes": zod.string().optional(),
  "pagination_type": zod.enum(['page', 'search_after']).optional(),
  "page": zod.number().optional(),
  "search_after": zod.string().optional(),
  "limit": zod.number().min(1).max(getPublishedProductsQueryLimitMax).optional(),
  "with_count": zod.boolean().optional()
})

export const getPublishedProductsResponse = zod.object({
  "_links": zod.object({
  "first": zod.object({
  "href": zod.string().optional()
}).optional(),
  "next": zod.object({
  "href": zod.string().optional()
}).optional(),
  "previous": zod.object({
  "href": zod.string().optional()
}).optional(),
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional(),
  "current_page": zod.number().optional()
}).and(zod.object({
  "_embedded": zod.object({
  "items": zod.array(zod.object({
  "_links": zod.object({
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional()
}).and(zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "created": zod.string().optional(),
  "enabled": zod.boolean().optional(),
  "family": zod.string().optional(),
  "groups": zod.array(zod.string()).optional(),
  "identifier": zod.string(),
  "quantified_associations": zod.object({

}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
}))).optional()
}).optional()
}))

/**
 * This endpoint allows you to get the information about a given published product.
 * @summary Get a published product
 */
export const getPublishedProductsCodeParams = zod.object({
  "code": zod.string()
})

export const getPublishedProductsCodeResponse = zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "created": zod.string().optional(),
  "enabled": zod.boolean().optional(),
  "family": zod.string().optional(),
  "groups": zod.array(zod.string()).optional(),
  "identifier": zod.string(),
  "quantified_associations": zod.object({

}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
})

