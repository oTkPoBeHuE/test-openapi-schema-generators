/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get the list of attributes of a given asset family.
 * @summary Get the list of attributes of a given asset family
 */
export const getAssetFamiliesCodeAttributesParams = zod.object({
  "asset_family_code": zod.string()
})

export const getAssetFamiliesCodeAttributesResponseItem = zod.object({
  "allowed_extensions": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "decimals_allowed": zod.boolean().optional(),
  "is_read_only": zod.boolean().optional(),
  "is_required_for_completeness": zod.boolean().optional(),
  "is_rich_text_editor": zod.boolean().optional(),
  "is_textarea": zod.boolean().optional(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "max_characters": zod.number().optional(),
  "max_file_size": zod.string().optional(),
  "max_value": zod.string().optional(),
  "media_type": zod.enum(['image', 'pdf', 'youtube', 'vimeo', 'other']),
  "min_value": zod.string().optional(),
  "prefix": zod.string().optional(),
  "suffix": zod.string().optional(),
  "type": zod.enum(['text', 'media_link', 'number', 'media_file', 'single_option', 'multiple_options', 'reference_entity_single_link', 'reference_entity_multiple_links', 'boolean']),
  "validation_regexp": zod.string().optional(),
  "validation_rule": zod.enum(['email', 'url', 'regexp', 'none']).optional(),
  "value_per_channel": zod.boolean().optional(),
  "value_per_locale": zod.boolean().optional()
})
export const getAssetFamiliesCodeAttributesResponse = zod.array(getAssetFamiliesCodeAttributesResponseItem)

/**
 * This endpoint allows you to get the information about a given attribute for a given asset family.
 * @summary Get an attribute of a given asset family
 */
export const getAssetFamilyAttributesCodeParams = zod.object({
  "asset_family_code": zod.string(),
  "code": zod.string()
})

export const getAssetFamilyAttributesCodeResponse = zod.object({
  "allowed_extensions": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "decimals_allowed": zod.boolean().optional(),
  "is_read_only": zod.boolean().optional(),
  "is_required_for_completeness": zod.boolean().optional(),
  "is_rich_text_editor": zod.boolean().optional(),
  "is_textarea": zod.boolean().optional(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "max_characters": zod.number().optional(),
  "max_file_size": zod.string().optional(),
  "max_value": zod.string().optional(),
  "media_type": zod.enum(['image', 'pdf', 'youtube', 'vimeo', 'other']),
  "min_value": zod.string().optional(),
  "prefix": zod.string().optional(),
  "suffix": zod.string().optional(),
  "type": zod.enum(['text', 'media_link', 'number', 'media_file', 'single_option', 'multiple_options', 'reference_entity_single_link', 'reference_entity_multiple_links', 'boolean']),
  "validation_regexp": zod.string().optional(),
  "validation_rule": zod.enum(['email', 'url', 'regexp', 'none']).optional(),
  "value_per_channel": zod.boolean().optional(),
  "value_per_locale": zod.boolean().optional()
})

/**
 * This endpoint allows you to update a given attribute for a given asset family. Note that if the attribute does not already exist for the given asset family, it creates it.
 * @summary Update/create an attribute of a given asset family
 */
export const patchAssetFamilyAttributesCodeParams = zod.object({
  "asset_family_code": zod.string(),
  "code": zod.string()
})

export const patchAssetFamilyAttributesCodeBody = zod.object({
  "allowed_extensions": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "decimals_allowed": zod.boolean().optional(),
  "is_read_only": zod.boolean().optional(),
  "is_required_for_completeness": zod.boolean().optional(),
  "is_rich_text_editor": zod.boolean().optional(),
  "is_textarea": zod.boolean().optional(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "max_characters": zod.number().optional(),
  "max_file_size": zod.string().optional(),
  "max_value": zod.string().optional(),
  "media_type": zod.enum(['image', 'pdf', 'youtube', 'vimeo', 'other']),
  "min_value": zod.string().optional(),
  "prefix": zod.string().optional(),
  "suffix": zod.string().optional(),
  "type": zod.enum(['text', 'media_link', 'number', 'media_file', 'single_option', 'multiple_options', 'reference_entity_single_link', 'reference_entity_multiple_links', 'boolean']),
  "validation_regexp": zod.string().optional(),
  "validation_rule": zod.enum(['email', 'url', 'regexp', 'none']).optional(),
  "value_per_channel": zod.boolean().optional(),
  "value_per_locale": zod.boolean().optional()
})

