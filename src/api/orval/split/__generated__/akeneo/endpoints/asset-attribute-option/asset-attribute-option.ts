/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  useMutation,
  useQuery
} from '@tanstack/react-query'
import type {
  DataTag,
  DefinedInitialDataOptions,
  DefinedUseQueryResult,
  MutationFunction,
  QueryFunction,
  QueryKey,
  UndefinedInitialDataOptions,
  UseMutationOptions,
  UseMutationResult,
  UseQueryOptions,
  UseQueryResult
} from '@tanstack/react-query'
import * as axios from 'axios';
import type {
  AxiosError,
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  GetAssetAttributesAttributeCodeOptionsCode200
} from '../../model/getAssetAttributesAttributeCodeOptionsCode200'
import type {
  GetAssetAttributesAttributeCodeOptionsCode401One
} from '../../model/getAssetAttributesAttributeCodeOptionsCode401One'
import type {
  GetAssetAttributesAttributeCodeOptionsCode404One
} from '../../model/getAssetAttributesAttributeCodeOptionsCode404One'
import type {
  GetAssetAttributesAttributeCodeOptionsCode406One
} from '../../model/getAssetAttributesAttributeCodeOptionsCode406One'
import type {
  GetAssetFamilyAttributesAttributeCodeOptions200Item
} from '../../model/getAssetFamilyAttributesAttributeCodeOptions200Item'
import type {
  GetAssetFamilyAttributesAttributeCodeOptions401One
} from '../../model/getAssetFamilyAttributesAttributeCodeOptions401One'
import type {
  GetAssetFamilyAttributesAttributeCodeOptions406One
} from '../../model/getAssetFamilyAttributesAttributeCodeOptions406One'
import type {
  PatchAssetAttributesAttributeCodeOptionsCode401One
} from '../../model/patchAssetAttributesAttributeCodeOptionsCode401One'
import type {
  PatchAssetAttributesAttributeCodeOptionsCode415One
} from '../../model/patchAssetAttributesAttributeCodeOptionsCode415One'
import type {
  PatchAssetAttributesAttributeCodeOptionsCode422One
} from '../../model/patchAssetAttributesAttributeCodeOptionsCode422One'
import type {
  PatchAssetAttributesAttributeCodeOptionsCodeBody
} from '../../model/patchAssetAttributesAttributeCodeOptionsCodeBody'



/**
 * This endpoint allows you to get a list of attribute options for a given asset family.
 * @summary Get a list of attribute options of a given attribute for a given asset family
 */
export const getAssetFamilyAttributesAttributeCodeOptions = (
    assetFamilyCode: string,
    attributeCode: string, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<GetAssetFamilyAttributesAttributeCodeOptions200Item[]>> => {
    
    return axios.default.get(
      `/api/rest/v1/asset-families/${assetFamilyCode}/attributes/${attributeCode}/options`,options
    );
  }


export const getGetAssetFamilyAttributesAttributeCodeOptionsQueryKey = (assetFamilyCode: string,
    attributeCode: string,) => {
    return [`/api/rest/v1/asset-families/${assetFamilyCode}/attributes/${attributeCode}/options`] as const;
    }

    
export const getGetAssetFamilyAttributesAttributeCodeOptionsQueryOptions = <TData = Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError = AxiosError<GetAssetFamilyAttributesAttributeCodeOptions401One | GetAssetFamilyAttributesAttributeCodeOptions406One>>(assetFamilyCode: string,
    attributeCode: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError, TData>>, axios?: AxiosRequestConfig}
) => {

const {query: queryOptions, axios: axiosOptions} = options ?? {};

  const queryKey =  queryOptions?.queryKey ?? getGetAssetFamilyAttributesAttributeCodeOptionsQueryKey(assetFamilyCode,attributeCode);

  

    const queryFn: QueryFunction<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>> = ({ signal }) => getAssetFamilyAttributesAttributeCodeOptions(assetFamilyCode,attributeCode, { signal, ...axiosOptions });

      

      

   return  { queryKey, queryFn, enabled: !!(assetFamilyCode && attributeCode), ...queryOptions} as UseQueryOptions<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError, TData> & { queryKey: DataTag<QueryKey, TData> }
}

export type GetAssetFamilyAttributesAttributeCodeOptionsQueryResult = NonNullable<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>>
export type GetAssetFamilyAttributesAttributeCodeOptionsQueryError = AxiosError<GetAssetFamilyAttributesAttributeCodeOptions401One | GetAssetFamilyAttributesAttributeCodeOptions406One>


export function useGetAssetFamilyAttributesAttributeCodeOptions<TData = Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError = AxiosError<GetAssetFamilyAttributesAttributeCodeOptions401One | GetAssetFamilyAttributesAttributeCodeOptions406One>>(
 assetFamilyCode: string,
    attributeCode: string, options: { query:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError, TData>> & Pick<
        DefinedInitialDataOptions<
          Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>,
          TError,
          TData
        > , 'initialData'
      >, axios?: AxiosRequestConfig}

  ):  DefinedUseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> }
export function useGetAssetFamilyAttributesAttributeCodeOptions<TData = Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError = AxiosError<GetAssetFamilyAttributesAttributeCodeOptions401One | GetAssetFamilyAttributesAttributeCodeOptions406One>>(
 assetFamilyCode: string,
    attributeCode: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError, TData>> & Pick<
        UndefinedInitialDataOptions<
          Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>,
          TError,
          TData
        > , 'initialData'
      >, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> }
export function useGetAssetFamilyAttributesAttributeCodeOptions<TData = Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError = AxiosError<GetAssetFamilyAttributesAttributeCodeOptions401One | GetAssetFamilyAttributesAttributeCodeOptions406One>>(
 assetFamilyCode: string,
    attributeCode: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError, TData>>, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> }
/**
 * @summary Get a list of attribute options of a given attribute for a given asset family
 */

export function useGetAssetFamilyAttributesAttributeCodeOptions<TData = Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError = AxiosError<GetAssetFamilyAttributesAttributeCodeOptions401One | GetAssetFamilyAttributesAttributeCodeOptions406One>>(
 assetFamilyCode: string,
    attributeCode: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetFamilyAttributesAttributeCodeOptions>>, TError, TData>>, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> } {

  const queryOptions = getGetAssetFamilyAttributesAttributeCodeOptionsQueryOptions(assetFamilyCode,attributeCode,options)

  const query = useQuery(queryOptions) as  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> };

  query.queryKey = queryOptions.queryKey ;

  return query;
}



/**
 * This endpoint allows you to get the information about a given asset attribute option.
 * @summary Get an attribute option for a given attribute of a given asset family
 */
export const getAssetAttributesAttributeCodeOptionsCode = (
    assetFamilyCode: string,
    attributeCode: string,
    code: string, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<GetAssetAttributesAttributeCodeOptionsCode200>> => {
    
    return axios.default.get(
      `/api/rest/v1/asset-families/${assetFamilyCode}/attributes/${attributeCode}/options/${code}`,options
    );
  }


export const getGetAssetAttributesAttributeCodeOptionsCodeQueryKey = (assetFamilyCode: string,
    attributeCode: string,
    code: string,) => {
    return [`/api/rest/v1/asset-families/${assetFamilyCode}/attributes/${attributeCode}/options/${code}`] as const;
    }

    
export const getGetAssetAttributesAttributeCodeOptionsCodeQueryOptions = <TData = Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError = AxiosError<GetAssetAttributesAttributeCodeOptionsCode401One | GetAssetAttributesAttributeCodeOptionsCode404One | GetAssetAttributesAttributeCodeOptionsCode406One>>(assetFamilyCode: string,
    attributeCode: string,
    code: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError, TData>>, axios?: AxiosRequestConfig}
) => {

const {query: queryOptions, axios: axiosOptions} = options ?? {};

  const queryKey =  queryOptions?.queryKey ?? getGetAssetAttributesAttributeCodeOptionsCodeQueryKey(assetFamilyCode,attributeCode,code);

  

    const queryFn: QueryFunction<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>> = ({ signal }) => getAssetAttributesAttributeCodeOptionsCode(assetFamilyCode,attributeCode,code, { signal, ...axiosOptions });

      

      

   return  { queryKey, queryFn, enabled: !!(assetFamilyCode && attributeCode && code), ...queryOptions} as UseQueryOptions<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError, TData> & { queryKey: DataTag<QueryKey, TData> }
}

export type GetAssetAttributesAttributeCodeOptionsCodeQueryResult = NonNullable<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>>
export type GetAssetAttributesAttributeCodeOptionsCodeQueryError = AxiosError<GetAssetAttributesAttributeCodeOptionsCode401One | GetAssetAttributesAttributeCodeOptionsCode404One | GetAssetAttributesAttributeCodeOptionsCode406One>


export function useGetAssetAttributesAttributeCodeOptionsCode<TData = Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError = AxiosError<GetAssetAttributesAttributeCodeOptionsCode401One | GetAssetAttributesAttributeCodeOptionsCode404One | GetAssetAttributesAttributeCodeOptionsCode406One>>(
 assetFamilyCode: string,
    attributeCode: string,
    code: string, options: { query:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError, TData>> & Pick<
        DefinedInitialDataOptions<
          Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>,
          TError,
          TData
        > , 'initialData'
      >, axios?: AxiosRequestConfig}

  ):  DefinedUseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> }
export function useGetAssetAttributesAttributeCodeOptionsCode<TData = Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError = AxiosError<GetAssetAttributesAttributeCodeOptionsCode401One | GetAssetAttributesAttributeCodeOptionsCode404One | GetAssetAttributesAttributeCodeOptionsCode406One>>(
 assetFamilyCode: string,
    attributeCode: string,
    code: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError, TData>> & Pick<
        UndefinedInitialDataOptions<
          Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>,
          TError,
          TData
        > , 'initialData'
      >, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> }
export function useGetAssetAttributesAttributeCodeOptionsCode<TData = Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError = AxiosError<GetAssetAttributesAttributeCodeOptionsCode401One | GetAssetAttributesAttributeCodeOptionsCode404One | GetAssetAttributesAttributeCodeOptionsCode406One>>(
 assetFamilyCode: string,
    attributeCode: string,
    code: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError, TData>>, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> }
/**
 * @summary Get an attribute option for a given attribute of a given asset family
 */

export function useGetAssetAttributesAttributeCodeOptionsCode<TData = Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError = AxiosError<GetAssetAttributesAttributeCodeOptionsCode401One | GetAssetAttributesAttributeCodeOptionsCode404One | GetAssetAttributesAttributeCodeOptionsCode406One>>(
 assetFamilyCode: string,
    attributeCode: string,
    code: string, options?: { query?:Partial<UseQueryOptions<Awaited<ReturnType<typeof getAssetAttributesAttributeCodeOptionsCode>>, TError, TData>>, axios?: AxiosRequestConfig}

  ):  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> } {

  const queryOptions = getGetAssetAttributesAttributeCodeOptionsCodeQueryOptions(assetFamilyCode,attributeCode,code,options)

  const query = useQuery(queryOptions) as  UseQueryResult<TData, TError> & { queryKey: DataTag<QueryKey, TData> };

  query.queryKey = queryOptions.queryKey ;

  return query;
}



/**
 * This endpoint allows you to update a given option for a given attribute and a given asset family. Learn more about the <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if the option does not already exist for the given attribute of the given asset family, it creates it.
 * @summary Update/create an asset attribute option for a given asset family
 */
export const patchAssetAttributesAttributeCodeOptionsCode = (
    assetFamilyCode: string,
    attributeCode: string,
    code: string,
    patchAssetAttributesAttributeCodeOptionsCodeBody: PatchAssetAttributesAttributeCodeOptionsCodeBody, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<void>> => {
    
    return axios.default.patch(
      `/api/rest/v1/asset-families/${assetFamilyCode}/attributes/${attributeCode}/options/${code}`,
      patchAssetAttributesAttributeCodeOptionsCodeBody,options
    );
  }



export const getPatchAssetAttributesAttributeCodeOptionsCodeMutationOptions = <TError = AxiosError<PatchAssetAttributesAttributeCodeOptionsCode401One | PatchAssetAttributesAttributeCodeOptionsCode415One | PatchAssetAttributesAttributeCodeOptionsCode422One>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof patchAssetAttributesAttributeCodeOptionsCode>>, TError,{assetFamilyCode: string;attributeCode: string;code: string;data: PatchAssetAttributesAttributeCodeOptionsCodeBody}, TContext>, axios?: AxiosRequestConfig}
): UseMutationOptions<Awaited<ReturnType<typeof patchAssetAttributesAttributeCodeOptionsCode>>, TError,{assetFamilyCode: string;attributeCode: string;code: string;data: PatchAssetAttributesAttributeCodeOptionsCodeBody}, TContext> => {
const {mutation: mutationOptions, axios: axiosOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof patchAssetAttributesAttributeCodeOptionsCode>>, {assetFamilyCode: string;attributeCode: string;code: string;data: PatchAssetAttributesAttributeCodeOptionsCodeBody}> = (props) => {
          const {assetFamilyCode,attributeCode,code,data} = props ?? {};

          return  patchAssetAttributesAttributeCodeOptionsCode(assetFamilyCode,attributeCode,code,data,axiosOptions)
        }

        


  return  { mutationFn, ...mutationOptions }}

    export type PatchAssetAttributesAttributeCodeOptionsCodeMutationResult = NonNullable<Awaited<ReturnType<typeof patchAssetAttributesAttributeCodeOptionsCode>>>
    export type PatchAssetAttributesAttributeCodeOptionsCodeMutationBody = PatchAssetAttributesAttributeCodeOptionsCodeBody
    export type PatchAssetAttributesAttributeCodeOptionsCodeMutationError = AxiosError<PatchAssetAttributesAttributeCodeOptionsCode401One | PatchAssetAttributesAttributeCodeOptionsCode415One | PatchAssetAttributesAttributeCodeOptionsCode422One>

    /**
 * @summary Update/create an asset attribute option for a given asset family
 */
export const usePatchAssetAttributesAttributeCodeOptionsCode = <TError = AxiosError<PatchAssetAttributesAttributeCodeOptionsCode401One | PatchAssetAttributesAttributeCodeOptionsCode415One | PatchAssetAttributesAttributeCodeOptionsCode422One>,
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof patchAssetAttributesAttributeCodeOptionsCode>>, TError,{assetFamilyCode: string;attributeCode: string;code: string;data: PatchAssetAttributesAttributeCodeOptionsCodeBody}, TContext>, axios?: AxiosRequestConfig}
): UseMutationResult<
        Awaited<ReturnType<typeof patchAssetAttributesAttributeCodeOptionsCode>>,
        TError,
        {assetFamilyCode: string;attributeCode: string;code: string;data: PatchAssetAttributesAttributeCodeOptionsCodeBody},
        TContext
      > => {

      const mutationOptions = getPatchAssetAttributesAttributeCodeOptionsCodeMutationOptions(options);

      return useMutation(mutationOptions);
    }
    