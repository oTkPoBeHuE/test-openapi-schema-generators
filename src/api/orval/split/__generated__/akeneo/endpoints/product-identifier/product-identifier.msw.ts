/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  GetDraftCode200,
  GetProducts200,
  GetProductsCode200,
  PatchProducts200One
} from '../../model'

export const getGetProductsResponseMock = (): GetProducts200 => ({_links: faker.helpers.arrayElement([{first: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined]), next: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined]), previous: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined]), self: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined])}, undefined]), current_page: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]),..._embedded: faker.helpers.arrayElement([{items: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({_links: faker.helpers.arrayElement([{self: faker.helpers.arrayElement([{href: faker.helpers.arrayElement([faker.string.alpha(20), undefined])}, undefined])}, undefined]),associations: faker.helpers.arrayElement([{associationTypeCode: faker.helpers.arrayElement([{groups: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.string.alpha(20))), undefined]), product_models: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.string.alpha(20))), undefined]), products: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.string.alpha(20))), undefined])}, undefined])}, undefined]), categories: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.string.alpha(20))), undefined]), completenesses: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({data: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]), locale: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), scope: faker.helpers.arrayElement([faker.string.alpha(20), undefined])})), undefined]), created: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), enabled: faker.helpers.arrayElement([faker.datatype.boolean(), undefined]), family: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), groups: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => (faker.string.alpha(20))), undefined]), identifier: faker.string.alpha(20), metadata: faker.helpers.arrayElement([{workflow_status: faker.helpers.arrayElement([faker.helpers.arrayElement(['read_only','draft_in_progress','proposal_waiting_for_approval','working_copy'] as const), undefined])}, undefined]), parent: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), quality_scores: faker.helpers.arrayElement([{}, undefined]), quantified_associations: faker.helpers.arrayElement([{quantifiedAssociationTypeCode: faker.helpers.arrayElement([{product_models: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({code: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), quantity: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined])})), undefined]), products: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({identifier: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), quantity: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined])})), undefined])}, undefined])}, undefined]), updated: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), uuid: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), values: faker.helpers.arrayElement([{attributeCode: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({data: faker.helpers.arrayElement([{}, undefined]), linked_data: faker.helpers.arrayElement([{attribute: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), code: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), labels: faker.helpers.arrayElement([{}, undefined])}, undefined]), locale: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), scope: faker.helpers.arrayElement([faker.string.alpha(20), undefined])})), undefined])}, undefined])})), undefined])}, undefined])})

export const getPatchProductsResponseMock = (overrideResponse: Partial< PatchProducts200One > = {}): PatchProducts200One => ({code: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), identifier: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), line: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]), message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), status_code: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]), ...overrideResponse})

export const getGetProductsCodeResponseMock = (): GetProductsCode200 => ({"associations":{"PACK":{"groups":[],"product_models":[],"products":["sunglass"]}},"categories":["summer_collection"],"completenesses":[{"data":10,"locale":"en_US","scope":"ecommerce"},{"data":20,"locale":"fr_FR","scope":"ecommerce"},{"data":30,"locale":"en_US","scope":"tablet"},{"data":40,"locale":"fr_FR","scope":"tablet"}],"created":"2024-12-14T16:37:10.511Z","enabled":true,"family":"tshirt","groups":[],"identifier":"top","parent":null,"quality_scores":[{"data":"A","locale":"en_US","scope":"ecommerce"},{"data":"B","locale":"fr_FR","scope":"ecommerce"},{"data":"D","locale":"en_US","scope":"tablet"},{"data":"E","locale":"fr_FR","scope":"tablet"}],"quantified_associations":{"PRODUCT_SET":{"product_models":[{"identifier":"model-biker-jacket-leather","quantity":2}],"products":[{"identifier":"cap","quantity":2},{"identifier":"shoes","quantity":1}]}},"updated":"2024-12-14T16:37:10.511Z","values":{"collection":[{"data":["winter_2016"],"linked_data":{"winter_2016":{"attribute":"collection","code":"winter_2016","labels":{"en_US":"Winter 2016","fr_FR":"Hiver 2016"}}},"locale":null,"scope":null}],"color":[{"data":"black","linked_data":{"attribute":"color","code":"black","labels":{"en_US":"Black","fr_FR":"Noir"}},"locale":null,"scope":null}],"description":[{"data":"Summer top","locale":"en_US","scope":"ecommerce"},{"data":"Top","locale":"en_US","scope":"tablet"},{"data":"D√©bardeur pour l'√©t√©","locale":"fr_FR","scope":"ecommerce"},{"data":"D√©bardeur","locale":"fr_FR","scope":"tablet"}],"name":[{"data":"Top","locale":"en_US","scope":null},{"data":"D√©bardeur","locale":"fr_FR","scope":null}],"price":[{"data":[{"amount":"15.5","currency":"EUR"},{"amount":"15","currency":"USD"}],"locale":null,"scope":null}],"size":[{"data":"m","linked_data":{"attribute":"size","code":"m","labels":{"en_US":"M","fr_FR":"M"}},"locale":null,"scope":null}]}})

export const getGetDraftCodeResponseMock = (): GetDraftCode200 => ({"associations":{"PACK":{"groups":[],"product_models":[],"products":["sunglass"]}},"categories":["summer_collection"],"completenesses":[{"data":10,"locale":"en_US","scope":"ecommerce"},{"data":20,"locale":"fr_FR","scope":"ecommerce"},{"data":30,"locale":"en_US","scope":"tablet"},{"data":40,"locale":"fr_FR","scope":"tablet"}],"created":"2024-12-14T16:37:10.512Z","enabled":true,"family":"tshirt","groups":[],"identifier":"top","parent":null,"quality_scores":[{"data":"A","locale":"en_US","scope":"ecommerce"},{"data":"B","locale":"fr_FR","scope":"ecommerce"},{"data":"D","locale":"en_US","scope":"tablet"},{"data":"E","locale":"fr_FR","scope":"tablet"}],"quantified_associations":{"PRODUCT_SET":{"product_models":[{"identifier":"model-biker-jacket-leather","quantity":2}],"products":[{"identifier":"cap","quantity":2},{"identifier":"shoes","quantity":1}]}},"updated":"2024-12-14T16:37:10.512Z","values":{"collection":[{"data":["winter_2016"],"linked_data":{"winter_2016":{"attribute":"collection","code":"winter_2016","labels":{"en_US":"Winter 2016","fr_FR":"Hiver 2016"}}},"locale":null,"scope":null}],"color":[{"data":"black","linked_data":{"attribute":"color","code":"black","labels":{"en_US":"Black","fr_FR":"Noir"}},"locale":null,"scope":null}],"description":[{"data":"Summer top","locale":"en_US","scope":"ecommerce"},{"data":"Top","locale":"en_US","scope":"tablet"},{"data":"D√©bardeur pour l'√©t√©","locale":"fr_FR","scope":"ecommerce"},{"data":"D√©bardeur","locale":"fr_FR","scope":"tablet"}],"name":[{"data":"Top","locale":"en_US","scope":null},{"data":"D√©bardeur","locale":"fr_FR","scope":null}],"price":[{"data":[{"amount":"15.5","currency":"EUR"},{"amount":"15","currency":"USD"}],"locale":null,"scope":null}],"size":[{"data":"m","linked_data":{"attribute":"size","code":"m","labels":{"en_US":"M","fr_FR":"M"}},"locale":null,"scope":null}]}})


export const getGetProductsMockHandler = (overrideResponse?: GetProducts200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GetProducts200> | GetProducts200)) => {
  return http.get('*/api/rest/v1/products', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetProductsResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPatchProductsMockHandler = (overrideResponse?: PatchProducts200One | ((info: Parameters<Parameters<typeof http.patch>[1]>[0]) => Promise<PatchProducts200One> | PatchProducts200One)) => {
  return http.patch('*/api/rest/v1/products', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getPatchProductsResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPostProductsMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<void> | void)) => {
  return http.post('*/api/rest/v1/products', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 201,
        
      })
  })
}

export const getDeleteProductsCodeMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.delete>[1]>[0]) => Promise<void> | void)) => {
  return http.delete('*/api/rest/v1/products/:code', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 204,
        
      })
  })
}

export const getGetProductsCodeMockHandler = (overrideResponse?: GetProductsCode200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GetProductsCode200> | GetProductsCode200)) => {
  return http.get('*/api/rest/v1/products/:code', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetProductsCodeResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPatchProductsCodeMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.patch>[1]>[0]) => Promise<void> | void)) => {
  return http.patch('*/api/rest/v1/products/:code', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 201,
        
      })
  })
}

export const getGetDraftCodeMockHandler = (overrideResponse?: GetDraftCode200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<GetDraftCode200> | GetDraftCode200)) => {
  return http.get('*/api/rest/v1/products/:code/draft', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetDraftCodeResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getPostProposalMockHandler = (overrideResponse?: void | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<void> | void)) => {
  return http.post('*/api/rest/v1/products/:code/proposal', async (info) => {await delay(1000);
  if (typeof overrideResponse === 'function') {await overrideResponse(info); }
    return new HttpResponse(null,
      { status: 201,
        
      })
  })
}
export const getProductIdentifierMock = () => [
  getGetProductsMockHandler(),
  getPatchProductsMockHandler(),
  getPostProductsMockHandler(),
  getDeleteProductsCodeMockHandler(),
  getGetProductsCodeMockHandler(),
  getPatchProductsCodeMockHandler(),
  getGetDraftCodeMockHandler(),
  getPostProposalMockHandler()
]
