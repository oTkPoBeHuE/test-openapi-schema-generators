/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get a list of product models. Product models are paginated. In the Enterprise Edition, since the 2.0, permissions based on your user groups are applied to the set of products you request.
 * @summary Get list of product models
 */
export const getProductModelsQueryLimitMax = 100;


export const getProductModelsQueryParams = zod.object({
  "search": zod.string().optional(),
  "scope": zod.string().optional(),
  "locales": zod.string().optional(),
  "attributes": zod.string().optional(),
  "pagination_type": zod.enum(['page', 'search_after']).optional(),
  "page": zod.number().optional(),
  "search_after": zod.string().optional(),
  "limit": zod.number().min(1).max(getProductModelsQueryLimitMax).optional(),
  "with_count": zod.boolean().optional(),
  "with_quality_scores": zod.boolean().optional()
})

export const getProductModelsResponse = zod.object({
  "_links": zod.object({
  "first": zod.object({
  "href": zod.string().optional()
}).optional(),
  "next": zod.object({
  "href": zod.string().optional()
}).optional(),
  "previous": zod.object({
  "href": zod.string().optional()
}).optional(),
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional(),
  "current_page": zod.number().optional()
}).and(zod.object({
  "_embedded": zod.object({
  "items": zod.array(zod.object({
  "_links": zod.object({
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional()
}).and(zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "created": zod.string().optional(),
  "family": zod.string().optional(),
  "family_variant": zod.string(),
  "metadata": zod.object({
  "workflow_status": zod.enum(['read_only', 'draft_in_progress', 'proposal_waiting_for_approval', 'working_copy']).optional()
}).optional(),
  "parent": zod.string().optional(),
  "quality_scores": zod.object({

}).optional(),
  "quantified_associations": zod.object({
  "quantifiedAssociationTypeCode": zod.object({
  "product_models": zod.array(zod.object({
  "code": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional(),
  "products": zod.array(zod.object({
  "identifier": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional()
}).optional()
}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
}))).optional()
}).optional()
}))

/**
 * This endpoint allows you to update and/or create several product models at once. Learn more about <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if no product models exists for the given code, it creates it. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product models you try to update. It may result in the creation of drafts if you only have edit rights through the product model's categories.
 * @summary Update/create several product models
 */
export const patchProductModelsBody = zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "created": zod.string().optional(),
  "family": zod.string().optional(),
  "family_variant": zod.string(),
  "metadata": zod.object({
  "workflow_status": zod.enum(['read_only', 'draft_in_progress', 'proposal_waiting_for_approval', 'working_copy']).optional()
}).optional(),
  "parent": zod.string().optional(),
  "quality_scores": zod.object({

}).optional(),
  "quantified_associations": zod.object({
  "quantifiedAssociationTypeCode": zod.object({
  "product_models": zod.array(zod.object({
  "code": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional(),
  "products": zod.array(zod.object({
  "identifier": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional()
}).optional()
}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
})

export const patchProductModelsResponse = zod.object({
  "code": zod.string().optional(),
  "identifier": zod.string().optional(),
  "line": zod.number().optional(),
  "message": zod.string().optional(),
  "status_code": zod.number().optional()
})

/**
 * This endpoint allows you to create a new product model. In the Enterprise Edition, since the v2.3, permissions based on your user groups are applied to the product model you try to create.
 * @summary Create a new product model
 */
export const postProductModelsBody = zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "created": zod.string().optional(),
  "family": zod.string().optional(),
  "family_variant": zod.string(),
  "metadata": zod.object({
  "workflow_status": zod.enum(['read_only', 'draft_in_progress', 'proposal_waiting_for_approval', 'working_copy']).optional()
}).optional(),
  "parent": zod.string().optional(),
  "quality_scores": zod.object({

}).optional(),
  "quantified_associations": zod.object({
  "quantifiedAssociationTypeCode": zod.object({
  "product_models": zod.array(zod.object({
  "code": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional(),
  "products": zod.array(zod.object({
  "identifier": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional()
}).optional()
}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
})

/**
 * This endpoint allows you to delete a given product model. All its children, product models and variant products, will be also deleted. In the Enterprise Edition, the permissions based on your connection user group are applied to the product model you try to delete.
 * @summary Delete a product model
 */
export const deleteProductModelsCodeParams = zod.object({
  "code": zod.string()
})

/**
 * This endpoint allows you to get the information about a given product model. In the Entreprise Edition, since the v2.0, permissions based on your user groups are applied to the product model you request.
 * @summary Get a product model
 */
export const getProductModelsCodeParams = zod.object({
  "code": zod.string()
})

export const getProductModelsCodeQueryParams = zod.object({
  "with_quality_scores": zod.boolean().optional()
})

export const getProductModelsCodeResponse = zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "created": zod.string().optional(),
  "family": zod.string().optional(),
  "family_variant": zod.string(),
  "metadata": zod.object({
  "workflow_status": zod.enum(['read_only', 'draft_in_progress', 'proposal_waiting_for_approval', 'working_copy']).optional()
}).optional(),
  "parent": zod.string().optional(),
  "quality_scores": zod.object({

}).optional(),
  "quantified_associations": zod.object({
  "quantifiedAssociationTypeCode": zod.object({
  "product_models": zod.array(zod.object({
  "code": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional(),
  "products": zod.array(zod.object({
  "identifier": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional()
}).optional()
}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
})

/**
 * This endpoint allows you to update a given product model. Learn more about <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if no product model exists for the given code, it creates it. In the Enterprise Edition PIM since the 2.3, permissions based on your user groups are applied to the product model you try to update. It may result in the creation of a draft if you only have edit rights through the product model's categories.
 * @summary Update/create a product model
 */
export const patchProductModelsCodeParams = zod.object({
  "code": zod.string()
})

export const patchProductModelsCodeBody = zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "created": zod.string().optional(),
  "family": zod.string().optional(),
  "family_variant": zod.string(),
  "metadata": zod.object({
  "workflow_status": zod.enum(['read_only', 'draft_in_progress', 'proposal_waiting_for_approval', 'working_copy']).optional()
}).optional(),
  "parent": zod.string().optional(),
  "quality_scores": zod.object({

}).optional(),
  "quantified_associations": zod.object({
  "quantifiedAssociationTypeCode": zod.object({
  "product_models": zod.array(zod.object({
  "code": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional(),
  "products": zod.array(zod.object({
  "identifier": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional()
}).optional()
}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
})

/**
 * This endpoint allows you to get the information about a given product model draft.
 * @summary Get a draft
 */
export const getProductModelDraftCodeParams = zod.object({
  "code": zod.string()
})

export const getProductModelDraftCodeResponse = zod.object({
  "associations": zod.object({
  "associationTypeCode": zod.object({
  "groups": zod.array(zod.string()).optional(),
  "product_models": zod.array(zod.string()).optional(),
  "products": zod.array(zod.string()).optional()
}).optional()
}).optional(),
  "categories": zod.array(zod.string()).optional(),
  "code": zod.string(),
  "created": zod.string().optional(),
  "family": zod.string().optional(),
  "family_variant": zod.string(),
  "metadata": zod.object({
  "workflow_status": zod.enum(['read_only', 'draft_in_progress', 'proposal_waiting_for_approval', 'working_copy']).optional()
}).optional(),
  "parent": zod.string().optional(),
  "quality_scores": zod.object({

}).optional(),
  "quantified_associations": zod.object({
  "quantifiedAssociationTypeCode": zod.object({
  "product_models": zod.array(zod.object({
  "code": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional(),
  "products": zod.array(zod.object({
  "identifier": zod.string().optional(),
  "quantity": zod.number().optional()
})).optional()
}).optional()
}).optional(),
  "updated": zod.string().optional(),
  "values": zod.object({
  "attributeCode": zod.array(zod.object({
  "data": zod.object({

}).optional(),
  "locale": zod.string().optional(),
  "scope": zod.string().optional()
})).optional()
}).optional()
})

/**
 * This endpoint allows you to submit a product model draft for approval.
 * @summary Submit a draft for approval
 */
export const postProductModelProposalParams = zod.object({
  "code": zod.string()
})

