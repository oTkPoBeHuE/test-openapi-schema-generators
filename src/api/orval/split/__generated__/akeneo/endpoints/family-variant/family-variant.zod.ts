/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * Akeneo PIM REST API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod'

/**
 * This endpoint allows you to get a list of family variants. Family variants are paginated and sorted by code.
 * @summary Get list of family variants
 */
export const getFamiliesFamilyCodeVariantsParams = zod.object({
  "family_code": zod.string()
})

export const getFamiliesFamilyCodeVariantsQueryLimitMax = 100;


export const getFamiliesFamilyCodeVariantsQueryParams = zod.object({
  "page": zod.number().optional(),
  "limit": zod.number().min(1).max(getFamiliesFamilyCodeVariantsQueryLimitMax).optional(),
  "with_count": zod.boolean().optional()
})

export const getFamiliesFamilyCodeVariantsResponse = zod.object({
  "_links": zod.object({
  "first": zod.object({
  "href": zod.string().optional()
}).optional(),
  "next": zod.object({
  "href": zod.string().optional()
}).optional(),
  "previous": zod.object({
  "href": zod.string().optional()
}).optional(),
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional(),
  "current_page": zod.number().optional()
}).and(zod.object({
  "_embedded": zod.object({
  "items": zod.array(zod.object({
  "_links": zod.object({
  "self": zod.object({
  "href": zod.string().optional()
}).optional()
}).optional()
}).and(zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "variant_attribute_sets": zod.array(zod.object({
  "attributes": zod.array(zod.string()).optional(),
  "axes": zod.array(zod.string()).optional(),
  "level": zod.number()
}))
}))).optional()
}).optional()
}))

/**
 * This endpoint allows you to update and/or create several family variants at once, for a given family.
 * @summary Update/create several family variants
 */
export const patchFamiliesFamilyCodeVariantsParams = zod.object({
  "family_code": zod.string()
})

export const patchFamiliesFamilyCodeVariantsBody = zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "variant_attribute_sets": zod.array(zod.object({
  "attributes": zod.array(zod.string()).optional(),
  "axes": zod.array(zod.string()).optional(),
  "level": zod.number()
}))
})

export const patchFamiliesFamilyCodeVariantsResponse = zod.object({
  "code": zod.string().optional(),
  "identifier": zod.string().optional(),
  "line": zod.number().optional(),
  "message": zod.string().optional(),
  "status_code": zod.number().optional()
})

/**
 * This endpoint allows you to get the information about a given family variant.
 * @summary Get a family variant
 */
export const getFamiliesFamilyCodeVariantsCodeParams = zod.object({
  "family_code": zod.string(),
  "code": zod.string()
})

export const getFamiliesFamilyCodeVariantsCodeResponse = zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "variant_attribute_sets": zod.array(zod.object({
  "attributes": zod.array(zod.string()).optional(),
  "axes": zod.array(zod.string()).optional(),
  "level": zod.number()
}))
})

/**
 * This endpoint allows you to update a given family variant. Know more about <a href="/documentation/update.html#update-behavior">Update behavior</a>. Note that if no family variant exists for the given code, it creates it.
 * @summary Update/create a family variant
 */
export const patchFamiliesFamilyCodeVariantsCodeParams = zod.object({
  "family_code": zod.string(),
  "code": zod.string()
})

export const patchFamiliesFamilyCodeVariantsCodeBody = zod.object({
  "code": zod.string(),
  "labels": zod.object({
  "localeCode": zod.string().optional()
}).optional(),
  "variant_attribute_sets": zod.array(zod.object({
  "attributes": zod.array(zod.string()).optional(),
  "axes": zod.array(zod.string()).optional(),
  "level": zod.number()
}))
})

